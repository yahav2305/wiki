name: Production Workflow
on:
  push:
    branches:
    - 'main'
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        submodules: true 
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3.0.0
      with:
        hugo-version: '0.127.0'
        extended: true
    - name: Test site build
      run: hugo --minify
    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.15.3'
      id: install
    - name: Lint helm chart
      run: helm lint helm/charts/wiki/ --values helm/values/wiki.yaml
  docker-build-and-push:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: true 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.16.1
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/wiki:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  helm-package-and-push:
    runs-on: ubuntu-22.04
    needs: test
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.15.3'
      id: install
    - name: Package helm chart
      run: |
        helm package ./helm/charts/wiki --version 1.0.0-${{ github.sha }} --app-version ${{ github.sha }}
    - name: Push helm chart to GHCR
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io/yahav2305 -u ${{ github.actor }} --password-stdin
        helm push ./wiki-1.0.0-${{ github.sha }}.tgz oci://ghcr.io/yahav2305
  test-in-dev-namespace:
    runs-on: ubuntu-22.04
    needs: [test, docker-build-and-push, helm-package-and-push]
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - uses: azure/setup-helm@v4.2.0
      with:
         version: 'v3.15.3'
      id: install
    - uses: azure/k8s-set-context@v4.0.0
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG_FILE }}
    - name: Login to ghcr
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io/yahav2305 -u ${{ github.actor }} --password-stdin
    - name: Deploy wiki helm chart to dev namespace
      run: |
        helm upgrade --install wiki oci://ghcr.io/yahav2305/wiki \
        --values ./helm/values/wiki.yaml --atomic \
        --version 1.0.0-${{ github.sha }} \
        --create-namespace --namespace dev-${{ github.sha }} \
        --set ingress.enabled=false
    - name: Test wiki helm chart
      run: |
        echo "WIP"
    - name: Delete dev namespace
      if: always()
      run: |
        kubectl delete namespace dev-${{ github.sha }}
  deploy-to-prod-namespace:
    runs-on: ubuntu-22.04
    needs: [test-in-dev-namespace]
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - uses: azure/setup-helm@v4.2.0
      with:
         version: 'v3.15.3'
      id: install
    - uses: azure/k8s-set-context@v4.0.0
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG_FILE }}
    - name: Login to ghcr
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io/yahav2305 -u ${{ github.actor }} --password-stdin
    - name: Deploy wiki helm chart to prod namespace
      run: |
        helm upgrade --install wiki oci://ghcr.io/yahav2305/wiki \
        --values ./helm/values/wiki.yaml --atomic \
        --version 1.0.0-${{ github.sha }} \
        --create-namespace --namespace default \
        --set image.tag=${{ github.sha }}